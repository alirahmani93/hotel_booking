"""
Django settings for booking project.
Generated by 'django-admin startproject' using Django 4.1.7.
"""
import os
from datetime import timedelta
from pathlib import Path
from django.utils.translation import gettext_lazy as _
from corsheaders.defaults import default_headers

BASE_DIR = Path(__file__).resolve().parent.parent
VERSION = os.environ.get('VERSION', '0.2.5')
SITE_ID = 1

SITE_HEADER = _('Listing Manager')
SITE_TITLE = _('Welcome to Listing Manager')
WEB_PROTOCOL = os.environ.get('WEB_PROTOCOL', 'http')
SITE_URL = os.environ.get('SITE_URL', (WEB_PROTOCOL + "://" + "127.0.0.1:8001"))

SECRET_KEY = os.environ.get('SECRET_KEY', 'secretttt_keyy_haahahsdakldn')
DEBUG = int(os.getenv('DEBUG', default=1))
ALLOWED_HOSTS = ['*']

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.admindocs',
    'django.contrib.sites',
    'django.contrib.flatpages',

    "django_redis",
    'django_filters',
    'rest_framework',
    'import_export',
    "corsheaders",

    'applications.user.apps.UserConfig',
    'applications.common.apps.CommonConfig',
    'applications.core.apps.CoreConfig',
]
AUTH_USER_MODEL = "user.User"

ROOT_URLCONF = 'booking.urls'
WSGI_APPLICATION = 'booking.wsgi.application'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    "corsheaders.middleware.CorsMiddleware",
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            'libraries': {
                'staticfiles': 'django.templatetags.static',
            }
        },
    },
]

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

LANGUAGE_CODE = 'en'
TIME_ZONE = os.getenv("TIME_ZONE", default='Asia/Tehran')
USE_I18N = True
USE_TZ = True
STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'static/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'applications/common/static'),
    MEDIA_ROOT,
    TEMPLATES[0]['DIRS'][0],
]

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

PROJECT_NAME = ROOT_URLCONF.split('.')[0]

# Email Backend
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = os.environ.get('EMAIL_HOST', 'smtp.gmail.com')
EMAIL_PORT = int(os.environ.get('EMAIL_PORT', 587))
EMAIL_USE_TLS = bool(int(os.environ.get('EMAIL_USE_TLS', True)))
EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER', 'test@gmail.com')
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD', '123')

# Session
SESSION_EXPIRE_AT_BROWSER_CLOSE = bool(int(os.environ.get('SESSION_EXPIRE_AT_BROWSER_CLOSE', True)))
SESSION_COOKIE_AGE = int(os.environ.get('SESSION_COOKIE_AGE', 60 * 90 * 8))  # 90 minutes
SESSION_SAVE_EVERY_REQUEST = bool(int(os.environ.get('SESSION_SAVE_EVERY_REQUEST', True)))

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": os.getenv('CACHES_REDIS_HOST', default="redis://127.0.0.1:6379"),
        "TIMEOUT": int(os.getenv('REDIS_TIMEOUT', default='3600')),
        "KEY_PREFIX": os.getenv('REDIS_KEY_PREFIX', default="mafia_nights"),
        "OPTIONS": {
        },
    }
}

REST_FRAMEWORK = {
    'DEFAULT_FILTER_BACKENDS': (
        'django_filters.rest_framework.DjangoFilterBackend',
    ),

    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ),
}

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=int(os.environ.get('ACCESS_TOKEN_LIFETIME', 10))),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=int(os.environ.get('REFRESH_TOKEN_LIFETIME', 1))),
    "ROTATE_REFRESH_TOKENS": False,
    "BLACKLIST_AFTER_ROTATION": True,
    "UPDATE_LAST_LOGIN": False,
    "ALGORITHM": "HS256",
    "SIGNING_KEY": SECRET_KEY,
    "VERIFYING_KEY": None,
    "AUDIENCE": None,
    "ISSUER": None,
    "AUTH_HEADER_TYPES": ("Bearer", "Token",),
    "AUTH_HEADER_NAME": "HTTP_AUTHORIZATION",
    "USER_ID_FIELD": "id",
    "USER_ID_CLAIM": "id",
    "USER_AUTHENTICATION_RULE": "rest_framework_simplejwt.authentication.default_user_authentication_rule",
    "AUTH_TOKEN_CLASSES": ("rest_framework_simplejwt.tokens.AccessToken",),
    "TOKEN_TYPE_CLAIM": "token_type",
    "JTI_CLAIM": "jti",
    "SLIDING_TOKEN_REFRESH_EXP_CLAIM": "refresh_exp",
    "SLIDING_TOKEN_LIFETIME": timedelta(minutes=int(os.environ.get('SLIDING_TOKEN_LIFETIME', 5))),
    "SLIDING_TOKEN_REFRESH_LIFETIME": timedelta(days=int(os.environ.get('SLIDING_TOKEN_REFRESH_LIFETIME', 1))),
}

# CORS
CORS_ALLOW_ALL_ORIGINS = bool(int(os.getenv('CORS_ALLOW_ALL_ORIGINS', default=1)))
CORS_ORIGIN_WHITELIST = os.getenv("CORS_ORIGIN_WHITELIST", "http://127.0.0.1:8001").split(",")
CORS_ORIGIN_ALLOW_ALL = bool(int(os.getenv('CORS_ORIGIN_ALLOW_ALL', default=1)))

CORS_ALLOW_HEADERS = default_headers + (
    'access-control-allow-origin', 'access-control-allow-methods', 'access-control-allow-origin',
    'access-control-allow-headers', 'access-control-request-method'
)

CSRF_TRUSTED_ORIGINS = [
    'http://94.130.87.144/',
    'http://localhost:8001',
]

CORS_ALLOWED_ORIGINS = [
    "http://94.130.87.144:8000",
    "http://94.130.87.144",
    'http://localhost:8000',
    'http://localhost:8001',
    'http://localhost:3000',
]

# Locale
LANGUAGES = [
    ('en', _('English')),
    ('fa', _('Farsi')),
]
LOCALE_PATHS = (os.path.join(BASE_DIR, "locale"),)

TEMPLATE_LOADERS = (
    ('django.template.loaders.cached.Loader', (
        'django.template.loaders.filesystem.Loader',
        'django.template.loaders.app_directories.Loader',
    )),
)
