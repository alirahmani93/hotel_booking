# Generated by Django 4.1.7 on 2023-03-17 15:38

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Amenities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='uuid')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('updated_time', models.DateTimeField(auto_now=True, verbose_name='updated_time')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='created_time')),
                ('is_shared', models.BooleanField(default=False, help_text='all room have these amenities or not?', verbose_name='is_shared')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('type', models.PositiveIntegerField(choices=[(1, 'Features'), (2, 'Appliances'), (3, 'Others')], verbose_name='type')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Cost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='uuid')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('updated_time', models.DateTimeField(auto_now=True, verbose_name='updated_time')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='created_time')),
                ('type', models.IntegerField(choices=[(0, 'Dollar'), (1, 'Euro'), (2, 'Pound'), (3, 'Rial')], default=0, verbose_name='type')),
                ('fee_each_day', models.FloatField(default=0, verbose_name='fee_each_day')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='uuid')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('updated_time', models.DateTimeField(auto_now=True, verbose_name='updated_time')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='created_time')),
                ('geolocation_x', models.FloatField(verbose_name='geolocation x')),
                ('geolocation_y', models.FloatField(verbose_name='geolocation y')),
                ('country', models.CharField(default='Iran', max_length=255, verbose_name='country')),
                ('city', models.CharField(max_length=255, verbose_name='city')),
                ('main_street', models.CharField(max_length=255, verbose_name='main_street')),
                ('street', models.CharField(blank=True, max_length=255, null=True, verbose_name='street')),
                ('house_number', models.CharField(max_length=255, verbose_name='house_number')),
                ('floor', models.CharField(blank=True, max_length=255, null=True, verbose_name='floor')),
                ('extra_address_detail', models.CharField(blank=True, max_length=255, null=True, verbose_name='address_extra')),
                ('zipcode', models.CharField(blank=True, max_length=31, null=True, verbose_name='zipcode')),
                ('is_ready', models.BooleanField(default=False, verbose_name='is_ready')),
                ('area', models.PositiveIntegerField(help_text='square meter', verbose_name='area')),
                ('description', models.TextField(max_length=5000, verbose_name='description')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('rate', models.PositiveIntegerField(default=0, verbose_name='rate')),
                ('policies', models.TextField(verbose_name='policies')),
                ('discount_for_full_rent', models.PositiveSmallIntegerField(default=0, help_text='percentage', validators=[django.core.validators.MaxValueValidator(100)], verbose_name='discount_for_full_rent')),
            ],
        ),
        migrations.CreateModel(
            name='PlaceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='uuid')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('updated_time', models.DateTimeField(auto_now=True, verbose_name='updated_time')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='created_time')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Reserve',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='uuid')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('updated_time', models.DateTimeField(auto_now=True, verbose_name='updated_time')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='created_time')),
                ('people_count', models.PositiveIntegerField(default=1, verbose_name='people_count')),
                ('in_date', models.DateField(verbose_name='in_date')),
                ('in_time', models.TimeField(verbose_name='in_time')),
                ('out_date', models.DateField(verbose_name='out_date')),
                ('out_time', models.TimeField(verbose_name='out_time')),
                ('is_canceled', models.BooleanField(default=False, verbose_name='is_canceled')),
                ('is_extended', models.BooleanField(default=False, verbose_name='is_extended')),
                ('is_damaged', models.BooleanField(default=False, verbose_name='is_damaged')),
                ('type', models.IntegerField(choices=[(0, 'Dollar'), (1, 'Euro'), (2, 'Pound'), (3, 'Rial')], default=0, verbose_name='type')),
                ('charge', models.FloatField(default=0, verbose_name='charge')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='uuid')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('updated_time', models.DateTimeField(auto_now=True, verbose_name='updated_time')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='created_time')),
                ('is_ready', models.BooleanField(default=False, verbose_name='is_ready')),
                ('area', models.PositiveIntegerField(help_text='square meter', verbose_name='area')),
                ('description', models.TextField(max_length=5000, verbose_name='description')),
                ('room_number', models.CharField(max_length=255, verbose_name='room_number')),
                ('bed_count', models.PositiveIntegerField(verbose_name='bed_count')),
                ('bathroom_count', models.PositiveIntegerField(verbose_name='bathroom_count')),
                ('type', models.IntegerField(choices=[(0, 'Dollar'), (1, 'Euro'), (2, 'Pound'), (3, 'Rial')], default=0, verbose_name='type')),
                ('fee_each_day', models.FloatField(default=0, verbose_name='fee_each_day')),
                ('amenities', models.ManyToManyField(limit_choices_to={'is_shared': False}, to='core.amenities', verbose_name='amenities')),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.place', verbose_name='place')),
            ],
        ),
    ]
