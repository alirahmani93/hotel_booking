# Generated by Django 4.1.7 on 2023-03-17 15:38

import applications.common.fields
import applications.user.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='uuid')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('updated_time', models.DateTimeField(auto_now=True, verbose_name='updated_time')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='created_time')),
                ('is_verified', models.BooleanField(default=False, verbose_name='is verified')),
                ('mobile_number', applications.common.fields.MobileNumber(blank=True, max_length=13, null=True, unique=True)),
                ('avatar', applications.common.fields.MyImageField(default=applications.user.models.User.default_profile_pic, upload_to=applications.user.models.User.upload_to)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email')),
                ('province', models.CharField(blank=True, max_length=255, null=True, verbose_name='province')),
                ('city', models.CharField(blank=True, max_length=255, null=True, verbose_name='city')),
                ('ID_card', models.CharField(blank=True, max_length=255, null=True, verbose_name='ID card')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='uuid')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('updated_time', models.DateTimeField(auto_now=True, verbose_name='updated_time')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='created_time')),
                ('compony_name', models.CharField(max_length=255, verbose_name='compony name')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
